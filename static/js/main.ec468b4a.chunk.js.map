{"version":3,"sources":["assets/pics/bg.png","assets/pics/logo.png","Dashboard/Dashborad.js","LoginForm/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["Dashborad","CommingSoon","React","lazy","a","Promise","resolve","setTimeout","fallback","Loading","Box","sx","classes","loadingRoot","display","placeItems","width","height","src","logo","alt","style","className","LoginForm","Loggin","formik","useFormik","initialValues","Username","Password","onSubmit","values","root","Paper","LoginWrapper","handleSubmit","Stack","direction","spacing","alignItems","LoginStyledField","label","variant","fullWidth","name","onChange","handleChange","value","Button","LoginButton","type","disabled","styled","TextField","maxWidth","borderRadius","minHeight","justifyContent","backgroundColor","flexDirection","p","xs","md","boxShadow","loginLabel","fontFamily","fontWeight","paddingBottom","theme","createTheme","palette","primary","main","secondary","App","useState","Logged","setLogged","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec468b4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.349271d6.png\";","export default __webpack_public_path__ + \"static/media/logo.6e7a33f2.png\";","import { Box, Typography } from \"@mui/material\";\nimport React, { Suspense } from \"react\";\nimport logo from \"../assets/pics/logo.png\";\nimport bg from \"../assets/pics/bg.png\";\n\nexport default function Dashborad() {\n  const CommingSoon = React.lazy(async () => {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve(import(\"./commingSoon\")), 2000);\n    });\n  });\n  return (\n    <Suspense fallback={<Loading />}>\n      <CommingSoon />\n    </Suspense>\n  );\n}\n\nconst Loading = () => {\n  return (\n    <Box\n      sx={classes.loadingRoot}\n      display={\"grid\"}\n      placeItems=\"center\"\n      width=\"100%\"\n      height=\"100vh\"\n    >\n      <img src={logo} alt=\"logo\" style={classes.logo}  className=\"beat\"/>\n    </Box>\n  );\n};\n\nconst classes = {\n  logo: {\n    width: \"clamp(6rem, 50%,15rem)\",\n  },\n  loadingRoot: {\n    display: \"grid\",\n    placeItems: \"center\",\n    height: \"100vh\",\n    width: \"100vw\",\n  },\n};\n","import { Button, Paper, Stack, TextField } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport React from \"react\";\nimport logo from \"../assets/pics/logo.png\";\nimport { useFormik } from \"formik\";\n\nexport default function LoginForm({ Loggin }) {\n  const formik = useFormik({\n    initialValues: {\n      Username: \"\",\n      Password: \"\",\n    },\n\n    onSubmit: (values) => {\n      Loggin();\n    },\n  });\n  return (\n    <div style={classes.root}>\n      <Paper sx={classes.LoginWrapper}>\n        <img src={logo} alt=\"logo\" style={classes.logo} />\n        <form onSubmit={formik.handleSubmit} style={{ width: \"100%\" }}>\n          <Stack\n            direction=\"column\"\n            spacing={3}\n            alignItems=\"center\"\n            sx={{ width: \"100%\" }}\n          >\n            <LoginStyledField\n              label=\"Username\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"Username\"\n              onChange={formik.handleChange}\n              value={formik.values.Username}\n            />\n            <LoginStyledField\n              label=\"Password\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"Password\"\n              onChange={formik.handleChange}\n              value={formik.values.Password}\n            />\n            <Button\n              sx={classes.LoginButton}\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              disabled={\n                formik.values.Username === \"\" || formik.values.Password === \"\"\n              }\n            >\n              Login\n            </Button>\n          </Stack>\n        </form>\n      </Paper>\n    </div>\n  );\n}\n\nconst LoginStyledField = styled(TextField)({\n  maxWidth: \"400px\",\n  \"& .MuiOutlinedInput-root\": {\n    \"& fieldset\": {\n      borderRadius: \"10px\",\n    },\n  },\n});\n\nconst classes = {\n  root: {\n    minHeight: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#EDF2F6\",\n  },\n  LoginWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    p: { xs: \"1rem\", md: \"2rem\" },\n    boxShadow: \"rgba(17, 17, 26, 0.1) 0px 0px 16px\",\n    borderRadius: { xs: \"0\", md: \"10px\" },\n    width: { xs: \"100%\", md: \"auto\" },\n    minHeight: { xs: \"calc(100vh - 2rem)\", md: \"500px\" },\n  },\n  loginLabel: {\n    fontFamily: \"'Roboto', sans-serif\",\n    fontWeight: \"600\",\n  },\n  logo: {\n    width: \"clamp(6rem, 50%,15rem)\",\n    paddingBottom: \"4em\",\n  },\n  LoginButton: {\n    maxWidth: \"200px\",\n    height: \"40px\",\n    borderRadius: \"10px\",\n  },\n};\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\nimport  React , {useState} from 'react';\nimport Dashborad from './Dashboard/Dashborad';\nimport LoginForm from \"./LoginForm/LoginForm\"\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#FF5656\",\n    },\n    secondary: {\n      main: \"#FDCF02\",\n    },\n  },\n});\n\nfunction App() {\n  const [Logged, setLogged] = useState(false);\n  const Loggin = () => {\n    setLogged(true)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n     {Logged ? <Dashborad/> : <LoginForm Loggin={Loggin}/>} \n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}