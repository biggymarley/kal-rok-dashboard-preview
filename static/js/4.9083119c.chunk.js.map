{"version":3,"sources":["assets/pics/man.webp","Dashboard/Routes/Overview.js","Dashboard/MainBoard.js","Dashboard/Drawer.js"],"names":["Overview","Statisitcs","Grid","container","spacing","alignItems","items","map","item","index","xs","sm","md","sx","display","Paper","classes","paper","Stack","direction","justifyContent","color","icon","Typography","label","value","py","px","borderRadius","boxShadow","flexGrow","placeItems","fontWeight","textTransform","opacity","fontSize","marginRight","MainBox","styled","Box","shouldForwardProp","prop","theme","open","padding","breakpoints","down","Main","useContext","DraweContext","component","Toolbar","Container","maxWidth","disableGutters","webDrawerWidth","openedMixin","width","transition","transitions","create","easing","sharp","duration","enteringScreen","closedMixin","leavingScreen","overflowX","up","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","AppBar","MuiAppBar","zIndex","drawer","marginLeft","MyListItemText","ListItemText","active","palette","primary","main","React","createContext","AppDrawer","useTheme","matches","useMediaQuery","useState","setOpen","useEffect","Provider","ToggleOpen","MyDrawer","variant","border","style","logo","src","alt","LogoName","IconButton","onClick","edge","Divider","DrawerItems","List","ListItem","button","ListItemIcon","Header","position","elevation","background","HeadTitle","Avatar","man","offButton","letterSpacing","itemLabel"],"mappings":"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","file":"static/js/4.9083119c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/man.d747105b.webp\";","import { Container, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { Box, Paper, Grid } from \"@mui/material\";\nimport LocalShippingRoundedIcon from \"@mui/icons-material/LocalShippingRounded\";\nimport WarehouseRoundedIcon from \"@mui/icons-material/WarehouseRounded\";\nimport PeopleRoundedIcon from \"@mui/icons-material/PeopleRounded\";\nimport TimelineRoundedIcon from \"@mui/icons-material/TimelineRounded\";\nexport default function Overview() {\n  return <Statisitcs />;\n}\n\nconst Statisitcs = () => {\n  return (\n    <Grid container spacing={2} alignItems=\"stretch\">\n      {items.map((item, index) => (\n        <Grid item xs={12} sm={6} md={3} key={index} sx={{ display: \"flex\" }}>\n          <Paper sx={classes.paper}>\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              spacing={2}\n              justifyContent=\"center\"\n              sx={{ color: item.color }}\n            >\n              {item.icon}\n              <Stack direction=\"column\">\n                <Typography sx={classes.label}>{item.label}</Typography>\n                <Typography sx={classes.value}>{item.value}</Typography>\n              </Stack>\n            </Stack>\n          </Paper>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\nconst classes = {\n  paper: {\n    py: \"2rem\",\n    px: \"1rem\",\n    borderRadius: \"12px\",\n    boxShadow: \"rgba(149, 157, 165, 0.2) 0px 8px 24px\",\n    flexGrow: 1,\n    display:\"grid\",\n    placeItems:\"center\"\n\n  },\n  label: {\n    fontWeight: \"300\",\n    textTransform: \"capitalize\",\n    opacity:.5,\n    color: \"#000000\",\n  },\n  value: {\n    fontWeight: \"900\",\n  },\n  icon: { fontSize: \"2.5rem\" , marginRight:\".5rem\"},\n};\n\nconst items = [\n  {\n    label: \"Toure Active\",\n    icon: <TimelineRoundedIcon sx={classes.icon} />,\n    value: \"A\",\n    color: \"secondary.main\",\n  },\n  {\n    label: \"Shipped\",\n    icon: <LocalShippingRoundedIcon sx={classes.icon} />,\n    value: \"155\",\n    color: \"third.main\",\n  },\n  {\n    label: \"To be shipped\",\n    icon: <WarehouseRoundedIcon sx={classes.icon} />,\n    value: \"120\",\n    color: \"forth.main\",\n  },\n  {\n    label: \"Total Users\",\n    icon: <PeopleRoundedIcon sx={classes.icon} />,\n    value: \"1512\",\n    color: \"primary.main\",\n  },\n];\n","import Box from \"@mui/material/Box\";\nimport { styled } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport React, { useContext } from \"react\";\nimport { DraweContext } from \"./Drawer\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Overview from \"./Routes/Overview\";\nimport { Container } from \"@mui/material\";\n\nconst MainBox = styled(Box, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  padding: theme.spacing(3),\n  flexGrow: 1,\n  ...(open && {\n    [theme.breakpoints.down(\"sm\")]: {\n        display: \"none\",\n      },\n \n  }),\n}));\n\nconst Main = () => {\n  const { open } = useContext(DraweContext);\n\n  return (\n    <MainBox open={open} component=\"main\">\n      <Toolbar />\n      <Container maxWidth=\"xl\" disableGutters>\n      {/* <BrowserRouter> */}\n        <Overview />\n      {/* </BrowserRouter> */}\n      </Container>\n    </MainBox>\n  );\n};\n\nexport default Main;\n","import ArrowBackRoundedIcon from \"@mui/icons-material/ArrowBackRounded\";\nimport GridViewRoundedIcon from \"@mui/icons-material/GridViewRounded\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport PeopleRoundedIcon from \"@mui/icons-material/PeopleRounded\";\nimport TimelineRoundedIcon from \"@mui/icons-material/TimelineRounded\";\nimport TourRoundedIcon from \"@mui/icons-material/TourRounded\";\nimport { Divider, IconButton } from \"@mui/material\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { styled } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport logo from \"../assets/pics/logo.png\";\nimport man from \"../assets/pics/man.webp\";\nimport Main from \"./MainBoard\";\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nconst webDrawerWidth = 240;\nconst mobileDrawerWidth = \"100vw\";\n\nconst openedMixin = (theme) => ({\n  width: webDrawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  [theme.breakpoints.down(\"sm\")]: {\n    width: mobileDrawerWidth,\n  },\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(7)} + 1px)`,\n  },\n});\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: webDrawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: webDrawerWidth,\n    width: `calc(100% - ${webDrawerWidth}px)`,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 0,\n      marginLeft: 0,\n    },\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\n\n\nconst MyListItemText = styled(ListItemText)(({ theme, active }) => ({\n  \"& .MuiListItemText-primary\": {\n    textTransform: \"uppercase\",\n    fontWeight: \"300\",\n  },\n  ...(active && {\n    \"& .MuiListItemText-primary\": {\n      color: theme.palette.primary.main,\n      textTransform: \"uppercase\",\n      fontWeight: \"500\",\n    },\n  }),\n}));\n\nexport const DraweContext = React.createContext({});\nexport default function AppDrawer() {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down('sm'));\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    setOpen(!matches)\n  }, [matches])\n  const ToggleOpen = () => {\n    setOpen(!open);\n  };\n  return (\n    <DraweContext.Provider value={{ open, ToggleOpen }}>\n      <Box sx={{ display: \"flex\" }}>\n        <Header />\n        <MyDrawer />\n        <Main />\n      </Box>\n    </DraweContext.Provider>\n  );\n}\n\n\nconst MyDrawer = () => {\n  const { open, ToggleOpen } = useContext(DraweContext);\n  return (\n    <Drawer\n      variant=\"permanent\"\n      open={open}\n      sx={{\n        \"& .MuiDrawer-paper\": {\n          border: 0,\n        },\n      }}\n    >\n      <Toolbar sx={{ justifyContent: \"space-between\" }}>\n        <img style={classes.logo} src={logo} alt=\"logo\" />\n        <Typography sx={classes.LogoName}>Kal & Rok</Typography>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={ToggleOpen}\n          edge=\"end\"\n          sx={{ display: { xs: \"inline-flex\", md: \"none\" } }}\n        >\n          <ArrowBackRoundedIcon />\n        </IconButton>\n      </Toolbar>\n      {open ? false : <Divider />}\n      <DrawerItems />\n    </Drawer>\n  );\n};\nconst DrawerItems = () => {\n  return (\n    <List>\n      {items.map((item, index) => (\n        <ListItem button key={index}>\n          <ListItemIcon sx={item.active ? { color: \"primary.main\" } : {}}>\n            {item.icon}\n          </ListItemIcon>\n          <MyListItemText primary={item.label} active={item.active} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nconst Header = () => {\n  const { open, ToggleOpen } = useContext(DraweContext);\n  return (\n    <AppBar\n      position=\"fixed\"\n      elevation={0}\n      open={open}\n      sx={{ background: \"#F9FAFB\" }}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"primary\"\n          aria-label=\"open drawer\"\n          onClick={ToggleOpen}\n          edge=\"start\"\n          sx={{\n            marginRight: \"26px\",\n            ...(open && { display: \"none\" }),\n          }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h1\" sx={classes.HeadTitle}>\n          Dashboard\n        </Typography>\n        <Box>\n          <IconButton>\n            <Avatar alt=\"Remy Sharp\" src={man} />\n          </IconButton>\n        </Box>\n        {/* <IconButton sx={classes.offButton}>\n          <PowerSettingsNewIcon />\n        </IconButton> */}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst classes = {\n  offButton: {\n    color: \"primary.main\",\n  },\n  HeadTitle: {\n    flexGrow: 1,\n    fontSize: \"1.5rem\",\n    fontWeight: \"500\",\n    color: \"primary.main\",\n  },\n  LogoName: {\n    fontSize: \"1rem\",\n    letterSpacing: \"2px\",\n    color: \"#000000\",\n    fontWeight: 300,\n    textTransform: \"uppercase\",\n    display: { xs: \"none\", md: \"block\" },\n  },\n  logo: {\n    width: \"60px\",\n  },\n  itemLabel: {\n    textTransform: \"uppercase\",\n    \"& .MuiListItemText-primary\": {\n      fontWeight: \"300\",\n    },\n  },\n};\n\nconst items = [\n  {\n    label: \"Overview\",\n    icon: <GridViewRoundedIcon />,\n    active: true,\n  },\n  {\n    label: \"Travels\",\n    icon: <TimelineRoundedIcon />,\n  },\n  {\n    label: \"Tours\",\n    icon: <TourRoundedIcon />,\n  },\n  {\n    label: \"Users\",\n    icon: <PeopleRoundedIcon />,\n  },\n];\n"],"sourceRoot":""}