{"version":3,"sources":["assets/pics/logo.png","Dashboard/Loading.js","Dashboard/Drawer.js","Dashboard/Dashborad.js","LoginForm/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["classes","logo","width","loadingRoot","display","placeItems","height","Loading","Box","sx","src","alt","style","className","webDrawerWidth","openedMixin","theme","transition","transitions","create","easing","sharp","duration","enteringScreen","breakpoints","down","closedMixin","leavingScreen","overflowX","spacing","up","Drawer","styled","MuiDrawer","shouldForwardProp","prop","open","flexShrink","whiteSpace","boxSizing","AppBar","MuiAppBar","zIndex","drawer","marginLeft","MainBox","padding","flexGrow","DraweContext","React","createContext","AppDrawer","useState","setOpen","Provider","value","ToggleOpen","Main","useContext","component","Toolbar","MyDrawer","variant","justifyContent","IconButton","color","onClick","edge","Divider","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Header","position","elevation","marginRight","Typography","HeadTitle","offButton","fontSize","fontWeight","Dashborad","fallback","LoginForm","Loggin","formik","useFormik","initialValues","Username","Password","onSubmit","values","root","Paper","LoginWrapper","handleSubmit","Stack","direction","alignItems","LoginStyledField","label","fullWidth","name","onChange","handleChange","Button","LoginButton","type","disabled","TextField","maxWidth","borderRadius","minHeight","backgroundColor","flexDirection","p","xs","md","boxShadow","loginLabel","fontFamily","paddingBottom","createTheme","palette","main","secondary","App","Logged","setLogged","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d8d5fdf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6e7a33f2.png\";","import { Box } from \"@mui/material\";\nimport React from \"react\";\nimport logo from \"../assets/pics/logo.png\";\n\n\nconst Loading = () => {\n    return (\n      <Box\n        sx={classes.loadingRoot}\n        display={\"grid\"}\n        placeItems=\"center\"\n        width=\"100%\"\n        height=\"100vh\"\n      >\n        <img src={logo} alt=\"logo\" style={classes.logo}  className=\"beat\"/>\n      </Box>\n    );\n  };\n  \n  const classes = {\n    logo: {\n      width: \"clamp(6rem, 50%,15rem)\",\n    },\n    loadingRoot: {\n      display: \"grid\",\n      placeItems: \"center\",\n      height: \"100vh\",\n      width: \"100vw\",\n    },\n  };\n  \n  export default Loading;","import ArrowBackRoundedIcon from \"@mui/icons-material/ArrowBackRounded\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport { IconButton } from \"@mui/material\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { styled } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport React, { useContext, useState } from \"react\";\nimport logo from \"../assets/pics/logo.png\";\nconst webDrawerWidth = 240;\nconst mobileDrawerWidth = \"100vw\";\n\nconst openedMixin = (theme) => ({\n  width: webDrawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  [theme.breakpoints.down(\"sm\")]: {\n    width: mobileDrawerWidth,\n  },\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(9)} + 1px)`,\n  },\n});\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: webDrawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: webDrawerWidth,\n    width: `calc(100% - ${webDrawerWidth}px)`,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 0,\n      marginLeft: 0,\n    },\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst MainBox = styled(Box, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  padding: theme.spacing(3),\n  flexGrow: 1,\n  ...(open && {\n    [theme.breakpoints.down(\"sm\")]: {\n    display: \"none\",\n    }\n  }),\n}));\n\nconst DraweContext = React.createContext(true);\nexport default function AppDrawer() {\n  const [open, setOpen] = useState(false);\n  const ToggleOpen = () => {\n    setOpen(!open);\n  };\n  return (\n    <DraweContext.Provider value={{ open, ToggleOpen }}>\n      <Box sx={{ display: \"flex\" }}>\n        <Header />\n        <MyDrawer />\n        <Main />\n      </Box>\n    </DraweContext.Provider>\n  );\n}\n\nconst Main = () => {\n  const { open } = useContext(DraweContext);\n\n  return (\n    <MainBox open={open}  component=\"main\">\n      <Toolbar />\n      Dashboard\n    </MainBox>\n  );\n};\n\nconst MyDrawer = () => {\n  const { open, ToggleOpen } = useContext(DraweContext);\n  return (\n    <Drawer variant=\"permanent\" open={open}>\n      <Toolbar sx={{ justifyContent: \"space-between\" }}>\n        <img style={classes.logo} src={logo} alt=\"logo\" />\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={ToggleOpen}\n          edge=\"end\"\n        >\n          <ArrowBackRoundedIcon />\n        </IconButton>\n      </Toolbar>\n      <Divider />\n      <List>\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </Drawer>\n  );\n};\n\nconst Header = () => {\n  const { open, ToggleOpen } = useContext(DraweContext);\n  return (\n    <AppBar position=\"fixed\" elevation={0} open={open}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={ToggleOpen}\n          edge=\"start\"\n          sx={{\n            marginRight: \"36px\",\n            ...(open && { display: \"none\" }),\n          }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h1\" sx={classes.HeadTitle}>\n          Dashboard\n        </Typography>\n        <IconButton sx={classes.offButton}>\n          <PowerSettingsNewIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst classes = {\n  offButton: {\n    color: \"primary.contrastText\",\n  },\n  HeadTitle: {\n    flexGrow: 1,\n    fontSize: \"1.5rem\",\n    fontWeight: \"500\",\n  },\n  logo: {\n    width: \"60px\",\n  },\n};\n","import React, { Suspense } from \"react\";\nimport Loading from \"./Loading\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppDrawer from \"./Drawer\";\nexport default function Dashborad() {\n  const CommingSoon = React.lazy(async () => {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve(import(\"./commingSoon\")), 2000);\n    });\n\n  });\n  return (\n    <Suspense fallback={<Loading />}>\n      {/* <BrowserRouter> */}\n        <AppDrawer />\n      {/* </BrowserRouter> */}\n    </Suspense>\n  );\n}\n","import { Button, Paper, Stack, TextField } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport React from \"react\";\nimport logo from \"../assets/pics/logo.png\";\nimport { useFormik } from \"formik\";\n\nexport default function LoginForm({ Loggin }) {\n  const formik = useFormik({\n    initialValues: {\n      Username: \"\",\n      Password: \"\",\n    },\n\n    onSubmit: (values) => {\n      Loggin();\n    },\n  });\n  return (\n    <div style={classes.root}>\n      <Paper sx={classes.LoginWrapper}>\n        <img src={logo} alt=\"logo\" style={classes.logo} />\n        <form onSubmit={formik.handleSubmit} style={{ width: \"100%\" }}>\n          <Stack\n            direction=\"column\"\n            spacing={3}\n            alignItems=\"center\"\n            sx={{ width: \"100%\" }}\n          >\n            <LoginStyledField\n              label=\"Username\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"Username\"\n              onChange={formik.handleChange}\n              value={formik.values.Username}\n            />\n            <LoginStyledField\n              label=\"Password\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"Password\"\n              onChange={formik.handleChange}\n              value={formik.values.Password}\n            />\n            <Button\n              sx={classes.LoginButton}\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              disabled={\n                formik.values.Username === \"\" || formik.values.Password === \"\"\n              }\n            >\n              Login\n            </Button>\n          </Stack>\n        </form>\n      </Paper>\n    </div>\n  );\n}\n\nconst LoginStyledField = styled(TextField)({\n  maxWidth: \"400px\",\n  \"& .MuiOutlinedInput-root\": {\n    \"& fieldset\": {\n      borderRadius: \"10px\",\n    },\n  },\n});\n\nconst classes = {\n  root: {\n    minHeight: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#EDF2F6\",\n  },\n  LoginWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    p: { xs: \"1rem\", md: \"2rem\" },\n    boxShadow: \"rgba(17, 17, 26, 0.1) 0px 0px 16px\",\n    borderRadius: { xs: \"0\", md: \"10px\" },\n    width: { xs: \"100%\", md: \"auto\" },\n    minHeight: { xs: \"calc(100vh - 2rem)\", md: \"500px\" },\n  },\n  loginLabel: {\n    fontFamily: \"'Roboto', sans-serif\",\n    fontWeight: \"600\",\n  },\n  logo: {\n    width: \"clamp(6rem, 50%,15rem)\",\n    paddingBottom: \"4em\",\n  },\n  LoginButton: {\n    maxWidth: \"200px\",\n    height: \"40px\",\n    borderRadius: \"10px\",\n  },\n};\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\nimport  React , {useState} from 'react';\nimport Dashborad from './Dashboard/Dashborad';\nimport LoginForm from \"./LoginForm/LoginForm\"\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#FF5656\",\n    },\n    secondary: {\n      main: \"#FDCF02\",\n    },\n  },\n});\n\nfunction App() {\n  const [Logged, setLogged] = useState(false);\n  const Loggin = () => {\n    setLogged(true)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n     {Logged ? <Dashborad/> : <LoginForm Loggin={Loggin}/>} \n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}